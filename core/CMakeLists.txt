add_library(
        imgui
        STATIC
        ${CMAKE_SOURCE_DIR}/thirdparty/imgui/imgui.cpp
        ${CMAKE_SOURCE_DIR}/thirdparty/imgui/imgui_demo.cpp
        ${CMAKE_SOURCE_DIR}/thirdparty/imgui/imgui_draw.cpp
        ${CMAKE_SOURCE_DIR}/thirdparty/imgui/imgui_tables.cpp
        ${CMAKE_SOURCE_DIR}/thirdparty/imgui/imgui_widgets.cpp
        ${CMAKE_SOURCE_DIR}/thirdparty/imgui/misc/cpp/imgui_stdlib.cpp
        ${CMAKE_SOURCE_DIR}/thirdparty/imgui/backends/imgui_impl_glfw.cpp
)
target_include_directories(
        imgui
        PUBLIC
        ${CMAKE_SOURCE_DIR}/thirdparty/imgui
        ${CMAKE_SOURCE_DIR}/thirdparty/glfw/include
)
target_link_libraries(
        imgui
        PUBLIC
        glfw
)

add_library(
        Vixen
        STATIC
        ${IMGUI_SOURCES}
        DisplayServer.cpp
        IndexFormat.h
        PrimitiveTopology.h
        VertexAttribute.h
        AttachmentInfo.h
        LoadAction.h
        StoreAction.h
        buffer/BufferUsage.h
        Application.cpp
        Application.h
        RenderingDevice.cpp
        RenderingDevice.h
        error/Macros.h
        error/CantCreateError.h
        error/Macros.cpp
        buffer/Buffer.h
        MemoryAllocationType.h
        DataFormat.h
        image/ImageSwizzle.h
        image/ImageLayout.h
        image/ImageAspect.h
        image/ImageSubresource.h
        image/ImageFormat.h
        image/ImageSamples.h
        image/ImageType.h
        image/Image.h
        image/ImageUsage.h
        image/Sampler.h
        image/SamplerState.h
        image/SamplerFilter.h
        image/SamplerRepeatMode.h
        image/CompareOperator.h
        image/SamplerBorderColor.h
        Bitmask.h
        buffer/Buffer.cpp
        command/CommandPool.h
        command/CommandBuffer.h
        command/Semaphore.h
        command/Fence.h
        shader/Shader.h
        shader/ShaderUniform.h
        shader/ShaderUniformType.h
        shader/ShaderStage.h
        WindowFlags.h
        WindowMode.h
        VSyncMode.h
        RenderingDriver.h
        WindowMouseMode.h
        WindowCursor.h
        shader/ShaderSource.h
        shader/ShaderLanguage.h
        command/CommandQueue.h
        shader/ShaderStageData.h
        Swapchain.h
        Surface.h
        QueueFamilyFlags.h
        Window.h
        command/CommandBufferType.h
)
target_link_libraries(
        Vixen
        PUBLIC
        glfw
        assimp::assimp
        glm::glm
        spdlog
        imgui
        spirv-cross-core
        spirv-cross-cpp
        glslang::glslang
        glslang::glslang-default-resource-limits
        glslang::SPIRV
)
target_include_directories(
        Vixen
        PUBLIC
        ${CMAKE_SOURCE_DIR}
        ${CMAKE_SOURCE_DIR}/thirdparty/imgui
        ${CMAKE_SOURCE_DIR}/thirdparty/glslang/SPIRV
        ${CMAKE_SOURCE_DIR}/thirdparty/glslang/glslang
        ${CMAKE_SOURCE_DIR}/thirdparty/SPIRV-Cross
        ${CMAKE_SOURCE_DIR}/thirdparty/SPIRV-Cross/include
        ${CMAKE_SOURCE_DIR}/thirdparty/stb
)

if (ENABLE_VULKAN)
    target_link_libraries(
            Vixen
            PUBLIC
            volk::volk
    )
endif ()
